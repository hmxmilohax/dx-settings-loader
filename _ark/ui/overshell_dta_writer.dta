#define INIT_DTA_WRITER
(
   {write_file #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx.dta" #endif
      {array
        (
            (mic_vols
               (mic_vols $mic_vol_1 $mic_vol_2 $mic_vol_3)
            )
            (mtv_position
               (mtv_position $mtvpos_0 $mtvpos_1 $mtvpos_2)
            )
            (gem_colors
               (gem_colors $slot1_color $slot2_color $slot3_color $slot4_color $slot5_color)
            )
            (sustain_colors
               (sustain_colors $slot1_color $slot2_color $slot3_color $slot4_color $slot5_color)
            )
            (smasher_colors
               (smasher_colors $slot1_color $slot2_color $slot3_color $slot4_color $slot5_color)
            )
            (drum_smasher_colors
               (drum_smasher_colors $smasher1_color $smasher2_color $smasher3_color $smasher4_color)
            )
            (drum_tom_colors
               (drum_tom_colors $drum1_color $drum2_color $drum3_color $drum4_color)
            )
            (drum_cymbal_color
               (drum_cymbal_color $cym1_color $cym2_color $cym3_color $cym4_color )
            )
            (kick_color
               (kick_color $kick_color)
            )
            (main_menu_screen
               (main_menu_screen $svnumber)
            )
            (emulate_fps
               (emulate_fps $emulatefps)
            )
            (track_speed
               (track_speed $trackspeed)
            )
            (mod_doublespeed
               (mod_doublespeed $mod_doublespeed)
            )
            (song_speed
               (song_speed $speedmod)
            )
            (animated_highway_texture
               (animated_highway_texture $animatedhighwayname)
            )
            (animated_gem_texture
               (animated_gem_texture $animatedgemname)
            )
            (animated_smasher_texture
               (animated_smasher_texture $animatedsmashername)
            )
            (gem_texture
               (gem_texture $gem)
            )
            (smasher_texture
               (smasher_texture $smasher)
            )
            (keyboard_texture
               (keyboard_texture $keyboard)
            )
            (emissive_texture
               (emissive_texture $emissive)
            )
            (spotlight_texture
               (spotlight_texture $spotlight)
            )
            (highway_texture
               (highway_texture $highway)
            )
            (mod_auto_vocals
              (mod_auto_vocals {if_else $mod_auto_vocals TRUE FALSE})
            )
            (mod_staticfills
               (mod_staticfills {if_else $mod_staticfills TRUE FALSE})
            )
            (mod_chord_numbers
               (mod_chord_numbers {if_else $mod_chord_numbers TRUE FALSE})
            )
            (mod_nohud
               (mod_nohud {if_else $mod_nohud TRUE FALSE})
            )
            (mod_miss_sounds
               (mod_miss_sounds {if_else $mod_miss_sounds TRUE FALSE})
            )
            (mod_songtitle
               (mod_songtitle {if_else $mod_songtitle TRUE FALSE})
            )
            (mod_whammyfx
               (mod_whammyfx {if_else $mod_whammyfx TRUE FALSE})
            )
            (mod_nocrowd
               (mod_nocrowd {if_else $mod_nocrowd TRUE FALSE})
            )
            (blackbg
               (blackbg {if_else $blackbg TRUE FALSE})
            )
            (mod_nosustain
               (mod_nosustain {if_else $mod_nosustain TRUE FALSE})
            )
            (mod_rb2sustain
               (mod_rb2sustain {if_else $mod_rb2sustain TRUE FALSE})
            )
            (mod_songselectnoise
               (mod_songselectnoise {if_else $mod_songselectnoise TRUE FALSE})
            )
            (mod_nobre
               (mod_nobre {if_else $mod_nobre TRUE FALSE})
            )
            (mod_practiceoverdrive
               (mod_practiceoverdrive {if_else $mod_practiceoverdrive TRUE FALSE})
            )
            (mod_nolanes
               (mod_nolanes {if_else $mod_nolanes TRUE FALSE})
            )
            (mod_rb4lanes
               (mod_rb4lanes {if_else $mod_rb4lanes TRUE FALSE})
            )
            (mod_chmode
               (mod_chmode {if_else $mod_chmode TRUE FALSE})
            )
            (mod_nomv
               (mod_nomv {if_else $mod_nomv TRUE FALSE})
            )
            (mod_blackmenu
               (mod_blackmenu {if_else $mod_blackmenu TRUE FALSE})
            )
            (mod_noflames
               (mod_noflames {if_else $mod_noflames TRUE FALSE})
            )
            (mod_noflares
               (mod_noflares {if_else $mod_noflares TRUE FALSE})
            )
            (mod_nopart
               (mod_nopart {if_else $mod_nopart TRUE FALSE})
            )
            (mod_rb4trk
               (mod_rb4trk {if_else $mod_rb4trk TRUE FALSE})
            )
            (mod_rb4os
               (mod_rb4os {if_else $mod_rb4os TRUE FALSE})
            )
            (mod_rb2trk
               (mod_rb2trk {if_else $mod_rb2trk TRUE FALSE})
            )
            (mod_xboxos
               (mod_xboxos {if_else $mod_xboxos TRUE FALSE})
            )
            (mod_ps3os
               (mod_ps3os {if_else $mod_ps3os TRUE FALSE})
            )
            (mod_wiios
               (mod_wiios {if_else $mod_wiios TRUE FALSE})
            )
            (mod_rb4ui
               (mod_rb4ui {if_else $mod_rb4ui TRUE FALSE})
            )
            (mod_fakejuke
               (mod_fakejuke {if_else $mod_fakejuke TRUE FALSE})
            )
            (mod_flashbang
               (mod_flashbang {if_else $mod_flashbang TRUE FALSE})
            )
            (mod_auto_kick
               (mod_auto_kick {if_else $mod_auto_kick TRUE FALSE})
            )
            (mod_rb3sustain
               (mod_rb3sustain {if_else $mod_rb3sustain TRUE FALSE})
            )
            (mod_legacybass
               (mod_legacybass {if_else $mod_legacybass TRUE FALSE})
            )
            (mod_vocalgender
               (mod_vocalgender {if_else $mod_vocalgender TRUE FALSE})
            )
            (mod_paddrum
               (mod_paddrum {if_else $mod_paddrum TRUE FALSE})
            )
            (mod_padguitar
               (mod_padguitar {if_else $mod_padguitar TRUE FALSE})
            )
            (mod_mididrum
               (mod_mididrum {if_else $mod_mididrum TRUE FALSE})
            )
            (mod_freestyledrums
               (mod_freestyledrums {if_else $mod_freestyledrums TRUE FALSE})
            )
            (mod_songtitlestats
               (mod_songtitlestats {if_else $mod_songtitlestats TRUE FALSE})
            )
            (mod_nofail
               (mod_nofail {if_else $mod_nofail TRUE FALSE})
            )
            (mod_fcclip
               (mod_fcclip {if_else $mod_fcclip TRUE FALSE})
            )
         )
      }
   }
)