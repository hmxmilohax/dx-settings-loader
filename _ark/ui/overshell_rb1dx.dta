;rock band 1 specific modifiers
#define RB1DX_DATA
(
   (
      os_nothing
   )
)
;rock band 2 specific modifiers
#define RB2DX_DATA
(
   (
      {if_else $mod_fakejuke mod_fakejuke mod_fakejuke_off}
      {if_else $mod_flashbang mod_flashbang mod_flashbang_off}
      {if_else $mod_rb3sustain mod_rb3sustain mod_rb3sustain_off}
      {if_else $mod_legacybass mod_legacybass mod_legacybass_off}
      {if_else $mod_vocalgender mod_vocalgender mod_vocalgender_off}
      {if_else $mod_paddrum mod_paddrum mod_paddrum_off}
      {if_else $mod_padguitar mod_padguitar mod_padguitar_off}
      {if_else $mod_mididrum mod_mididrum mod_mididrum_off}
      {if_else $mod_freestyledrums mod_freestyledrums mod_freestyledrums_off}
      {if_else $mod_songtitlestats mod_songtitlestats mod_songtitlestats_off}
   )
)
;LEGO rock band specific modifiers
#define LRBDX_DATA
(
   (
      {if_else $mod_fakejuke mod_fakejuke mod_fakejuke_off}
      {if_else $mod_flashbang mod_flashbang mod_flashbang_off}
      {if_else $mod_rb3sustain mod_rb3sustain mod_rb3sustain_off}
      {if_else $mod_legacybass mod_legacybass mod_legacybass_off}
      {if_else $mod_vocalgender mod_vocalgender mod_vocalgender_off}
      {if_else $mod_paddrum mod_paddrum mod_paddrum_off}
      {if_else $mod_padguitar mod_padguitar mod_padguitar_off}
      {if_else $mod_mididrum mod_mididrum mod_mididrum_off}
      {if_else $mod_freestyledrums mod_freestyledrums mod_freestyledrums_off}
      {if_else $mod_songtitlestats mod_songtitlestats mod_songtitlestats_off}
   )
)
;sets the current position and refreshes the list to show the change
#define LIST_HANDLER
(
   {switch $simpledx ;simpledx is set via SELECT_MSG in demo_launcher.dta
      (1 {set $rb1dxmodifierpos {sel_section.lst selected_sym}})
      (2 {set $rb2dxmodifierpos {sel_section.lst selected_sym}})
      (lrb {set $lrbdxmodifierpos {sel_section.lst selected_sym}})
      kDataUnhandled
   }
   {$this lst_reset}
)
;screen definition of the list reset handle
#define LIST_RESET_HANDLER
(
   (lst_reset
      ;sets up the data for the list, in this instance since rb1, rb2, and lrb screens are basiaclly the same,
      ;we handle all three cases in the same panel definition
      {sel_section.lst set_data
         {switch $simpledx ;simpledx is set via SELECT_MSG in demo_launcher.dta
            (1 RB1DX_DATA)
            (2 RB2DX_DATA)
            (lrb LRBDX_DATA)
         kDataUnhandled
         }
      }
      ;after populating the list again, force set the position of the list back to the selected modifier
      {switch $simpledx ;simpledx is set via SELECT_MSG in demo_launcher.dta
         (1 {if $rb1dxmodifierpos {sel_section.lst set_selected $rb1dxmodifierpos}})
         (2 {if $rb2dxmodifierpos {sel_section.lst set_selected $rb2dxmodifierpos}})
         (lrb {if $lrbdxmodifierpos {sel_section.lst set_selected $lrbdxmodifierpos}})
         kDataUnhandled
      }
   )
)
{new
   UIPanel
   rb1_blank_panel
   (file "practice/rb1_background.milo")
   (enter
      {$this iterate Mat $m {$m set use_environ FALSE}}
      {$this iterate UILabel $l {$l set_showing FALSE}}
      {$this iterate UIButton $l {$l set_showing FALSE}}
      {$this iterate Mesh $l {$l set_showing FALSE}}
      {octo1.mesh set_showing TRUE}
      {octo2.mesh set_showing TRUE}
      {octoarm02.mesh set_showing TRUE}
      {octoarm2.mesh set_showing TRUE}
      {octoarm03.mesh set_showing TRUE}
      {octoarm3.mesh set_showing TRUE}
      ;{octopus.mesh set_showing TRUE}
      ;{octopus01.mesh set_showing TRUE}
      {black_small.mesh set_showing TRUE}
      {black_bg.mesh set_showing TRUE}
   )
}
{new
   UIPanel
   rb2_blank_panel
   (file "practice/rb2_background.milo")
   (enter
      {$this iterate Mat $m {$m set use_environ FALSE}}
      {$this iterate Mat $m {$m set color {pack_color .3 .5 .6}}}
      {background.mat set color {pack_color 0 0 0}}
      {black_bg.mat set color {pack_color 0 0 0}}
      {black_small.mat set color {pack_color 0 0 0}}
   )
}
{new
   UIPanel
   rb2_blank_panel2
   (file "practice/rb2_lower2nd.milo")
   (enter
      {$this iterate Mat $m {$m set use_environ FALSE}}
      {$this iterate Mat $m {$m set color {pack_color .1 .3 .4}}}
      {demon.mesh set_showing FALSE}
      {python.mesh set_showing FALSE}
      {demonskulls.mesh set_showing FALSE}
      {512_poster.mesh set_showing FALSE}
      {fail_skull.mesh set_showing FALSE}
   )
}
{new
   UIPanel
   rb2_blank_panel3
   (file "practice/tour_world_map.milo")
   (enter
      {$this iterate Mat $m {$m set use_environ FALSE}}
   )
}
{new
   UIPanel
   practice_lower3rd_panel
   (file
      {switch $simpledx
         (1 "practice/rb1_lower3rd.milo")
         (2 "practice/rb2_lower3rd.milo")
         (lrb "practice/lrb_lower3rd.milo")
         kDataunhandled
      }
   )
   (enter
      {if {== $simpledx lrb}
         {practice_bigcorner.tex set_bitmap "ui/image/calibrate_corner.png"}
         {practice_cloud2.tex set_bitmap "ui/image/clouds_01.png"}
         {practice_cloud3.tex set_bitmap "ui/image/clouds_02.png"}
         {practice_ornate_spit.tex set_bitmap "ui/image/hub_edgegraphic.png"}
         {practice_ornate_sunrise.tex set_bitmap "ui/image/ornate_sunrise.png"}
         {practice_rose1.tex set_bitmap "ui/image/legoflower_rock.png"}
         {practice_ornate_tentacles.tex set_bitmap "ui/image/ornate_tentacles.png"}
         {practice_ornate_thorns.tex set_bitmap "ui/image/thorns.png"}
         {practice_wallpaper_stretch02.tex set_bitmap "ui/image/wallpaper_02.png"}
         {practice_bigcorner.mesh set_local_scale 1.2 1.2 1.2}
         {practice_bigcorner.mesh set_local_pos_index 2 215}
      }
      {switch $simpledx
         (1 {do
               {bigcorner.mat set use_environ FALSE}
               {bigcorner.mat set color {pack_color .6 .3 .3}}
               {bar_05.mesh set_showing FALSE}
               {bar_06.mesh set_showing FALSE}
               {bar_07.mesh set_showing FALSE}
               {demo_launcher_panel set_showing FALSE}
            }
         )
         (2 {do
               {practice_bigcorner.mat set use_environ FALSE}
               {demo_launcher_panel set_showing FALSE}
            }
         )
         (lrb {practice_bigcorner.mat set use_environ FALSE})
         kDataunhandled
      }
   )
}
{new
   UIPanel
   rb1_main_lower3rd_panel
   (file "practice/rb1_lower3rd.milo")
   ;good ones - tour_worldmap_lower3rd
   (enter
      {flower_center.mat set use_environ FALSE}
      {petal_1.mat set use_environ FALSE}
      {petal_02.mat set use_environ FALSE}
      {petal_03.mat set use_environ FALSE}
      {petal_4.mat set use_environ FALSE}
      {bullseye_tree.mat set use_environ FALSE}
      {chains.mat set use_environ FALSE}
      {scale_tree.mat set use_environ FALSE}
      {big_tattoo.mat set use_environ FALSE}
      {end_tree.mat set use_environ FALSE}
      {banner_01.mat set use_environ FALSE}
      {banner_test.mat set use_environ FALSE}
      ;{$this iterate Mat $m {$m set use_environ FALSE}}
   )
}
{new
   UIPanel
   overshell_rb1dx_panel ;it says rb1dx but really its rb1, rb2, and lrb currently
   (file
      {switch $simpledx ;simpledx is set via SELECT_MSG in demo_launcher.dta
         (1 "practice/rb1_sel_section.milo")
         (2 "practice/rb2_sel_section.milo")
         (lrb "practice/rb2_sel_section.milo")
         kDataUnhandled
      }
   )
   (focus sel_section.lst)
   (enter
      {if {== $simpledx lrb} ;simpledx is set via SELECT_MSG in demo_launcher.dta
         {anchor_corner01.tex set_bitmap "ui/image/trim_corner_07.png"} ;apply lego rock band textures in case we are on the lrb screen
         {anchor_corner02.tex set_bitmap "ui/image/trim_corner_07.png"}
         {ribcage_wallpaper.tex set_bitmap "ui/image/wallpaper_07.png"}
         {rock_corner_trim0011.tex set_bitmap "ui/image/legotrim_01.png"}
      }
      {$this iterate UILabel $i {$i set_type 'farnhamdisplay-bold(63)'}} ;force the font for the header of these screens
      {full_selection.mesh set_showing FALSE} ;hide the practice selection bar
      {demo_launcher_panel toggle_focus} ;switch the demo loader background from tbrb to rb2 for theming. we run this again on exit
      {overshell_main_panel set_showing FALSE} ;hide the original overshell panel because it's stinky tbrb themed
      {$this iterate Mat $m {$m set prelit FALSE}} ;fix some texture issues on the imported milo
      {$this iterate Mat $m {$m set use_environ FALSE}} ;fix some texture issues on the imported milo
      {sel_section.lst set_local_pos_index 0 10} ;move the list around to fit the imported milo
      {sel_section.lst set_local_pos_index 2 60} ;move the list around to fit the imported milo
      {$this lst_reset} ;run the reset list call on panel enter
      {title.lbl set text_token ;set the title of the current screen based on result
         {switch $simpledx ;simpledx is set via SELECT_MSG in demo_launcher.dta
            (1 {localize os_rb1dx})
            (2 {localize os_rb2dx})
            (lrb {localize os_lrbdx})
            kDataUnhandled
         }
      }
   )
   LIST_RESET_HANDLER ;apply the list reset definition to this panel
   (SELECT_MSG ;when something is selected. add in all rb1, rb2, and lrb results here
      #ifdef HX_XBOX {demo_launcher_panel forward_sfx} #endif ;play confirmation tone
      {switch {$component selected_sym}
         (mod_songtitlestats
            {set $mod_songtitlestats {! $mod_songtitlestats}}
         )
         (mod_songtitlestats_off
            {set $mod_songtitlestats {! $mod_songtitlestats}}
         )
         (mod_freestyledrums
            {set $mod_freestyledrums {! $mod_freestyledrums}}
         )
         (mod_freestyledrums_off
            {set $mod_freestyledrums {! $mod_freestyledrums}}
         )
         (mod_mididrum
            {set $mod_mididrum {! $mod_mididrum}}
         )
         (mod_mididrum_off
            {set $mod_mididrum {! $mod_mididrum}}
         )
         (mod_padguitar
            {set $mod_padguitar {! $mod_padguitar}}
         )
         (mod_padguitar_off
            {set $mod_padguitar {! $mod_padguitar}}
         )
         (mod_paddrum
            {set $mod_paddrum {! $mod_paddrum}}
         )
         (mod_paddrum_off
            {set $mod_paddrum {! $mod_paddrum}}
         )
         (mod_vocalgender
            {set $mod_vocalgender {! $mod_vocalgender}}
         )
         (mod_vocalgender_off
            {set $mod_vocalgender {! $mod_vocalgender}}
         )
         (mod_legacybass
            {set $mod_legacybass {! $mod_legacybass}}
         )
         (mod_legacybass_off
            {set $mod_legacybass {! $mod_legacybass}}
         )
         (mod_rb3sustain
            {set $mod_rb3sustain {! $mod_rb3sustain}}
         )
         (mod_rb3sustain_off
            {set $mod_rb3sustain {! $mod_rb3sustain}}
         )
         (mod_flashbang
            {set $mod_flashbang {! $mod_flashbang}}
         )
         (mod_flashbang_off
            {set $mod_flashbang {! $mod_flashbang}}
         )
         (mod_fakejuke
            {set $mod_fakejuke {! $mod_fakejuke}}
         )
         (mod_fakejuke_off
            {set $mod_fakejuke {! $mod_fakejuke}}
         )
      }
      LIST_HANDLER ;run our list reset routine after any result is selected
   )
   (SCROLL_MSG
      #ifdef HX_XBOX {demo_launcher_panel scroll_sfx} #endif ;play scroll tone
   )
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         #ifdef HX_XBOX {demo_launcher_panel back_sfx} #endif ;play back tone
         {demo_launcher_panel toggle_focus} ;flip the bottom background panel back to tbrb since we switched to rb2 on enter
         {ui pop_screen} ;leave the current screen
         {overshell_main_panel set_showing TRUE} ;show the main overshell panel again because we hid it on panel enter
         {demo_launcher_panel set_showing TRUE}
      }
      kDataUnhandled
   )
}
{new
   UIScreen
   overshell_rb1dx_screen
   (panels rb1_blank_panel overshell_rb1dx_panel rb1_main_lower3rd_panel vinette_panel)
   (focus overshell_rb1dx_panel)
}
{new
   UIScreen
   overshell_rb2dx_screen
   (panels rb2_blank_panel overshell_rb1dx_panel rb2_blank_panel2 rb2_blank_panel3 practice_lower3rd_panel vinette_panel)
   (focus overshell_rb1dx_panel)
}
{new
   UIScreen
   overshell_lrbdx_screen
   (panels overshell_rb1dx_panel practice_lower3rd_panel vinette_panel)
   (focus overshell_rb1dx_panel)
}